name: Autograding Tests

'on':
  - push
  - repository_dispatch

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
      - name: Install System Dependencies
        run: sudo apt-get update && sudo apt-get install -y python3-tk

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: pip install pytest coverage pytest-json-report

      # - name: T1
      #   id: t1
      #   run: |
      #     coverage run -m pytest battleship_test.py --tb=short --json-report --json-report-file=test_results.json
      #     coverage report -m
      #   continue-on-error: true  

      # - name: Compute Grade and Percentage
      #   id: compute-grade
      #   run: |
      #     python grade_calculator.py test_results.json
      #     PERCENTAGE=$(cat grade_output.txt | grep "Percentage=" | cut -d'=' -f2)
      #     GRADE=$(cat grade_output.txt | grep "Grade=" | cut -d'=' -f2)
      #     echo "FINAL_PERCENTAGE=$PERCENTAGE" >> $GITHUB_ENV
      #     echo "FINAL_GRADE=$GRADE" >> $GITHUB_ENV
      #     echo "FINAL_PERCENTAGE=$PERCENTAGE" >> $GITHUB_OUTPUT
      #     echo "FINAL_GRADE=$GRADE" >> $GITHUB_OUTPUT

      # - name: Print Results
      #   run: |
      #     echo "Final Percentage: ${{ steps.compute-grade.outputs.FINAL_PERCENTAGE }}%"
      #     echo "Final Grade: ${{ steps.compute-grade.outputs.FINAL_GRADE }}"

      # # - name: Report Grades to GitHub Classroom
      # #   uses: classroom-resources/autograding-grading-reporter@v1
      # #   with:
      # #     runners: "run-autograding-tests"  # Required field (string, not array)
      # #   env:
      # #     # FINAL_GRADE: ${{ steps.compute-grade.outputs.FINAL_GRADE }}
      # #     FINAL_PERCENTAGE:  ${{ steps.compute-grade.outputs.FINAL_PERCENTAGE }}%

      # - name: Report Grades to GitHub Classroom
      #   uses: classroom-resources/autograding-grading-reporter@v1  
      #   env:
      #     T1_RESULTS: "${{10}}"
      #     T2_RESULTS: "${{100}}"
      #   with:
      #     runners: t1
      - name: Run Tests for T1
        id: t1
        run: |
          # Your test code here
          echo "result=10" >> $GITHUB_ENV  # Example: test 1 score = 10

      - name: Run Tests for T2
        id: t2
        run: |
          # Your test code here
          echo "result=20" >> $GITHUB_ENV  # Example: test 2 score = 20

      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        env:
          T1_RESULTS: "${{steps.t1.outputs.result}}"
          T2_RESULTS: "${{steps.t2.outputs.result}}"
        with:
          runners: t1,t2
      
